#!/usr/bin/perl -w
#################################################################################
# NTHU oz directory Viewer is a CGI program(with Perl) written by		#
# Po-Chien Lin									#
#										#
# This work is licensed under the Creative Commons				#
# Attribution-Noncommercial-Share Alike License.				#
# To view a copy of this license, visit						#
# http://creativecommons.org/licenses/by-nc-sa/3.0/				#
#################################################################################
use constant PROG_VER => '0.8';

#########################################################################
# Change the following two lines as your own detail.			#
#########################################################################
use constant ROOT => '/usr/local/ftpuser/public/';
use constant WWWROOT => '/';
#use constant CGIROOT => '/cgi-bin/l?d=';
#use constant CGIROOT => '/c.php?d=';
use constant CGIROOT => '/ftp';
use constant FGIROOT => '/ftp/';

sub sizef()	# size format
{
  my $size = shift @_;

  my $f;
  if (!$size)
  { $f = '       0';}
  elsif ($size < 103)
  { $f = sprintf("%6d", $size) . ' b';}
  elsif ($size < 1024 * 1024)
  { $f = sprintf("%5.1f", $size / 1024) . ' KB';}
  else
  { $f = sprintf("%4.1f", $size / (1024*1024)) . ' MB';}

  $f =~ s/ /&nbsp;/g;
  $f;
}

#########################################################################
# about url decode/encode:
# http://support.internetconnection.net/CODE_LIBRARY/Perl_URL_Encode_and_Decode.shtml
# Here's an excellent way to encode strings that are going to be placed in a URL: 
# $str =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;
# $str can now be passed in the query string safely, for example:
# <a ref="page_given_string.php?str=$str">LINK</a>
# Likely, "page_given_string.php" will want to decode $str back into something useful:
# $str =~ s/\%([A-Fa-f0-9]{2})/pack('C', hex($1))/seg;
#########################################################################

#print "Content-type: text/html\n\n";

#my $d = $ENV{'QUERY_STRING'};
my $d = pop @ARGV;
$d =~ s/\%([A-Fa-f0-9]{2})/pack('C', hex($1))/seg;	# url decode
#$d =~ s#^d=/?#/#;
$d =~ s#^/?#/#;
$d =~ s#\.\./?##g;
$d .= '/' if !($d =~ m#/$#);	## also work if $ENV{'QUERY_STRING'} is empty.
# die "Permission denied\n" if $d eq '/cgi-bin/';
$d = '/' if $d eq '/cgi-bin/';

# print '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">', "\n";
print '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">' . "\n";
print '<html xmlns="http://www.w3.org/1999/xhtml">' . "\n";
print '<head><title>Index of ', $d, '</title>', "\n";
print '<meta http-equiv="content-type" content="text/html; charset=utf-8" />' . "\n";
print '<link rel="stylesheet" href="/style.css" type="text/css" media="screen" />';
print '</head>', "\n";
print '<body>', "\n";
print '<div id="login">', "\n", '<a href="/logout">logout</a>', '<a class="getlink" href="javascript:void(window.open(\'http://tinyurl.com/create.php?url=\'+encodeURIComponent(location.href)))" title="取得本頁面短網址">[GetLink]</a>', '</div>', "\n";

my $index = $d;
#$index =~ s#/([^/]+)#/<a href="/ftp/$1">$1</a>#g;
$index =~ s#/#{/}#g;
if ($index =~ m#{/}.+{/}#)
{
#  $index =~ s#^(.*)/([^/]+)/$#$1/<a href="/ftp$1/$2/">$2</a>/#;
  if ($index =~ m#^(.*){/}([^/]+){/}$#)
  {
    my($p, $q) = ($1, $2);
    my($pp, $qq) = ($1, $2);
    $p =~ s#{/}#/#g;
    $q =~ s#{/}#/#g;
    $index = $pp . '{/}<a href="/xftp' . $p . '/' . $q . '/">' . $qq . '</a>{/}';
  }
  while ($index =~ m#{/}(.+?){/}<a href=#)
  {
    last if ($1 =~ m#<a href#);
#    $index =~ s#^(.*)/([^/=]+)/$#$1/<a href="/ftp$1/$2/">$2</a>/#;
#    $index =~ s#^(.*)/([^/=]+)/$#$1/<a href="/ftp$1/$2/">$2</a>/#;
    if ($index =~ m#^(.*){/}([^{=]+){/}(.*)$#)
    {
      my($p, $q) = ($1, $2);
      my($pp, $qq) = ($1, $2);
      my $tail = $3;
      $p =~ s#{/}#/#g;
      $q =~ s#{/}#/#g;
      $index = $pp . '{/}<a href="/ftp' . $p . '/' . $q . '/">' . $qq . '</a>{/}' . $tail;
    }
  }
}
$index =~ s#{/}<a href="/xftp.*>(.+)</a>{/}#\{/\}$1\{/\}#;
$index =~ s#{/}#/#g;
if ($index ne '/')
{
  print '<h1><a href="/ftp">Index</a> of ', $index, '</h1>', "\n";
}
else
{
  print '<h1>Index of ', $index, '</h1>', "\n";
}

$d =~ s#^/?##;
my $target = ROOT . $d;
# print $target;
#$target = '/usr/local/ftpuser/public/page';
opendir(DH, $target) or die "No such directory.\n";
#while (my $filename = readdir(DH))
#{
#  print("$filename<br />");
#}
#closedir DH;
my @list = readdir DH;
closedir DH;

my $pd = '/';	# default
if ($d ne '/')
{
  $pd = $d;
  $pd =~ s#^/?#/#;
  $pd =~ s#(.*/)[^/]+/?#$1#;
}

print '<ul>', "\n";
print '<li class="back"><a href="', CGIROOT, $pd, '"> Parent Directory</a></li>', "<hr />\n";
print '<li class="blank">Name<span class="dsc">', '<span class="size">Size</span>';
print '<span class="timestamp">Last modified</span>', '</span></li>', "\n", '<hr />', "\n";

#for (readdir DH)
for (sort @list)
{
  next if $_ eq '.';
  next if $_ eq '..';

  next if (/^\@/);		# hide

  if (-d (ROOT . $d . $_))
  {
    $_ .= '/';
    my $m = (stat _)[9];
    print '<li class="folder">', '<a href="', CGIROOT, '/', $d, $_, '"> ', $_, '</a>';
    print '<span class="dsc"><span class="timestamp">', substr(scalar(localtime $m), 4), '</span>';
print '<a class="getfilelink" href="javascript:void(window.open(\'http://tinyurl.com/create.php?url=\'+encodeURIComponent(location.href)+encodeURIComponent(\'', $_, '\')))" title="取得「', $_, '」短網址"></a>', "\n";
    print '</span></li>', "\n";
  }
  else
  {
    my ($s, $m) = (stat _)[7, 9];
#    print '<li class="file">', '<a href="', WWWROOT, 'public/', $d, $_, '"> ', $_, '</a>';
    print '<li class="file">', '<a href="', FGIROOT, $d, $_, '"> ', $_, '</a>';
    print '<span class="dsc"><span class="size">', &sizef($s), '</span>';
    print '<span class="timestamp">', substr(scalar(localtime $m), 4), '</span>';
print '<a class="getfilelink" href="javascript:void(window.open(\'http://tinyurl.com/create.php?url=\'+encodeURIComponent(location.href)+encodeURIComponent(\'', $_, '\')))" title="取得&nbsp;', $_, '&nbsp;短網址"></a>', "\n";
    print '</span></li>', "\n";
  }
}

print '<hr />', '</ul>', "\n";

print '<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><span xmlns:dc="http://purl.org/dc/elements/1.1/" property="dc:title">Directory Viewer(version ' . PROG_VER . ')</span> by <span xmlns:cc="http://creativecommons.org/ns#" property="cc:attributionName">Po-Chien Lin</span> is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License</a>.', "\n";
#print '<a href="', WWWROOT, '/@l.pl">View source code</a>', "\n";

print '</body></html>';

